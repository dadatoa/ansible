---
- hosts: dockerlab
  
  tasks:
    - name: install base server system for debian family os 
      block:
        - name: remove conflicting file to avoid ansible crash
          file:
            state: absent
            path: "/var/lib/dpkg/lock-frontend"
  
        - name: run apt update and apt upgrade
          apt:
            update_cache: yes
            upgrade: yes

        - name: Check if reboot is required
          ansible.builtin.stat:
            path: /var/run/reboot-required
            get_md5: no
          register: reboot_required_file

        - name: Reboot if required
          ansible.builtin.reboot:
          when: reboot_required_file.stat.exists

        - name: Remove dependencies no longer required after boot
          ansible.builtin.apt:
            autoremove: yes
  
        - name: Install some basic packages
          apt:
            pkg:
            - openssh-server
            - python3
            - git
            - curl
            - sudo
            - rclone
            - wget
            - ufw
            - neovim
            - dbus-user-session
            - fuse-overlayfs
            - slirp4netns
            update_cache: yes
            cache_valid_time: 3600

        - name: test if docker is already installed
          ansible.builtin.package:
            name: docker
            state: present
          check_mode: true
          register: docker_check

        - name: Uninstall conflicting packages for docker and previous docker
          ansible.builtin.apt:
            pkg:
            - docker.io
            - docker-doc
            - docker-compose
            - podman-docker
            - containerd
            - runc
            - docker-ce
            - docker-ce-cli 
            - containerd.io 
            - docker-buildx-plugin 
            - docker-compose-plugin 
            - docker-ce-rootless-extras
            state: absent
          when: docker_check is failed

        - name: Remove docker directory from previous install
          ansible.builtin.file:
            path: /var/lib/docker
            state: absent
          when: docker_check is failed

        - name: Remove old containers
          ansible.builtin.file:
            path: /var/lib/containerd
            state: absent
          when: docker_check is failed

        - name: Install pre-required packages
          ansible.builtin.apt:
            pkg:
            - ca-certificates
            - curl
            - gnupg
            state: present

        - name: download docker convenient script
          ansible.builtin.get_url:
            url: https://get.docker.com
            dest: /root/get-docker.sh
            mode: '0755'
    
        - name: install docker with script
          ansible.builtin.shell: sh /root/get-docker.sh
          when: docker_check is failed
    
        - name: remove convenient script after install
          file:
            state: absent
            path: "/root/get-docker.sh"

        - name: test if tailscale is already installed
          ansible.builtin.package:
            name: tailscale
            state: present
          check_mode: true
          register: tailscale_check

        - name: download tailscale install script
          get_url:
            url: https://tailscale.com/install.sh
            dest: /root/tailscale.sh
            mode: '0755'
  
        - name: execute tailscale install script
          shell: sh /root/tailscale.sh
          when: tailscale_check is failed
    
        - name: remove tailscale install script
          file:
            path: "/root/tailscale.sh"
            state: absent

        - name: Reboot if required
          ansible.builtin.reboot:
          when: reboot_required_file.stat.exists

        - name: Remove dependencies no longer required after boot
          ansible.builtin.apt:
            autoremove: yes
      
      become: true
      when: ansible_facts['os_family'] == 'Debian'

    - name: install base system on arch family OS
      block:
        become: true
        when: ansible_facts['os_family'] == 'Archlinux'
        tasks:
          - name: update and upgrade
